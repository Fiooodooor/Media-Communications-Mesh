name: Scan CodeQL

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

env:
  BUILD_TYPE: Release
  MTL_BUILD_DISABLE_PCAPNG: true
  DEBIAN_FRONTEND: noninteractive
  INSTALL_USE_CUSTOM_PATH: "true"

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    name: Analyze
    runs-on: ${{ matrix.runner-os }}
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        runner-os: [ 'ubuntu-22.04' ]
    permissions:
      actions: read
      contents: read
      security-events: write
    defaults:
      run:
        shell: bash
    steps:
    - name: 'Harden Runner'
      uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
      with:
        egress-policy: audit

    - name: 'Checkout repository'
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: 'Print Env variables'
      run: |
        source scripts/setup_build_env.sh
        echo '******** NON root ********'
        env
        echo '******** AS root ********'
        $AS_ROOT env

    - name: 'Install dependencies'
      run: eval 'source scripts/setup_build_env.sh && install_package_dependencies'

    - name: 'Check local dependencies build cache'
      id: local-dependencies-cache
      uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
      with:
        path: ${{ github.workspace }}/_build/_install
        key: ${{ runner.os }}-${{ hashFiles('versions.env') }}-${{ hashFiles('scripts/setup*.sh') }}

    - name: 'Build and Install xdp and libbpf'
      if: steps.local-dependencies-cache.outputs.cache-hit != 'true'
      run: eval 'source scripts/setup_build_env.sh && lib_install_xdp_bpf_tools'

    - name: 'Build and Install libfabric'
      if: steps.local-dependencies-cache.outputs.cache-hit != 'true'
      run: eval 'source scripts/setup_build_env.sh && lib_install_fabrics'

    - name: 'Download the DPDK and MTL'
      if: steps.local-dependencies-cache.outputs.cache-hit != 'true'
      run: eval 'source scripts/setup_build_env.sh && lib_download_mtl_and_dpdk'

    - name: 'Build and Install the DPDK'
      if: steps.local-dependencies-cache.outputs.cache-hit != 'true'
      run: eval 'source scripts/setup_build_env.sh && lib_install_dpdk'

    - name: 'Build and Install the MTL'
      if: steps.local-dependencies-cache.outputs.cache-hit != 'true'
      run: eval 'source scripts/setup_build_env.sh && lib_install_mtl'

    - name: 'Build and Install JPEG XS'
      if: steps.local-dependencies-cache.outputs.cache-hit != 'true'
      run: eval 'source scripts/setup_build_env.sh && lib_install_jpeg_xs'

    - name: 'Build and Install JPEG XS ffmpeg plugin'
      if: steps.local-dependencies-cache.outputs.cache-hit != 'true'
      run: eval 'source scripts/setup_build_env.sh && lib_install_mtl_jpeg_xs_plugin'

    - name: 'Build gRPC and dependencies'
      if: steps.local-dependencies-cache.outputs.cache-hit != 'true'
      run: eval 'source scripts/setup_build_env.sh && lib_install_grpc'

    - name: 'Save local dependencies build cache'
      if: steps.local-dependencies-cache.outputs.cache-hit != 'true'
      id: local-dependencies-save-cache
      uses: actions/cache/save@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
      with:
        path: ${{ github.workspace }}/_build/_install
        key: ${{ steps.local-dependencies-cache.outputs.cache-primary-key }}

    - name: 'Initialize CodeQL'
      uses: github/codeql-action/init@b611370bb5703a7efb587f9d136a52ea24c5c38c # v3.25.11
      with:
        languages: 'c-cpp'
        config-file: ${{ github.workspace }}/.github/codeql/codeql-config.yml

    - name: 'Build MCM SDK and Media Proxy'
      run: ./build.sh

    - name: 'Build MCM FFmpeg plugin'
      working-directory: ${{ github.workspace }}/ffmpeg-plugin
      run: |
        ./clone-and-patch-ffmpeg.sh && \
        ./configure-ffmpeg.sh && \
        ./build-ffmpeg.sh

    - name: 'Perform CodeQL Analysis'
      uses: github/codeql-action/analyze@b611370bb5703a7efb587f9d136a52ea24c5c38c # v3.25.11
      with:
        category: "/language:c-cpp"
